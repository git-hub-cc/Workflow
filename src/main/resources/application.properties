# ===============================
# SERVER CONFIGURATION
# ===============================
server.port=8081
# 为 Camunda REST API 和 Webapps 设置上下文路径 (可选)
# camunda.bpm.webapp.application-path=/camunda

# ===============================
# DATABASE CONFIGURATION (H2)
# ===============================
# DB_CLOSE_DELAY=-1 确保 H2 内存数据库在所有连接关闭后不会丢失数据
spring.datasource.url=jdbc:h2:mem:workflowdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
# 确保 Camunda 和 JPA 使用同一个数据库事务, 这对于数据一致性至关重要
spring.jpa.open-in-view=false 
spring.jpa.hibernate.ddl-auto=update

# ===============================
# CAMUNDA ENGINE CONFIGURATION (嵌入式引擎)
# ===============================
# 【重要】移除 camunda.bpm.client.base-url，因为它只用于外部任务客户端模式

# 自动部署 src/main/resources 目录下的流程定义文件 (BPMN, DMN, CMMN)
camunda.bpm.auto-deployment-enabled=true
# 自动更新 Camunda 相关的数据库表结构
camunda.bpm.database.schema-update=true
# 启用 Camunda 的作业执行器 (用于处理定时器、异步任务等)
camunda.bpm.job-execution.enabled=true
# 为 Camunda Webapps 创建一个默认的管理员用户
camunda.bpm.admin-user.id=camunda-admin
camunda.bpm.admin-user.password=camunda-admin
# 关闭 Camunda 默认的 Telemetry 报告
camunda.bpm.telemetry.enabled=false

# ===============================
# JWT CONFIGURATION
# ===============================
# !!重要!! 在生产环境中，请使用环境变量或配置服务器来管理此密钥，并且密钥应更长、更复杂
app.jwt.secret=NDY4YjMzY2VjYjI5ZWY5ZDE5YjhiYjI5ZDA5MmM1Y2U1MzM1YjM2MzJlYjQyMDc4MzM0OGM0MGEwMGUyMjE1YQo=
app.jwt.expiration-ms=86400000

# ===============================
# MAIL CONFIGURATION
# ===============================
# 示例使用 Gmail SMTP 服务器, 您需要替换为自己的配置
# 对于 Gmail, 您可能需要生成 "应用专用密码"
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your-email@gmail.com
spring.mail.password=your-app-specific-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# 发件人邮箱地址
app.mail.from=your-email@gmail.com